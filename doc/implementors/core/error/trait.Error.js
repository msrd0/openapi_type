(function() {var implementors = {
"proc_macro2":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"struct\" href=\"proc_macro2/struct.LexError.html\" title=\"struct proc_macro2::LexError\">LexError</a>"]],
"serde":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"struct\" href=\"serde/de/value/struct.Error.html\" title=\"struct serde::de::value::Error\">Error</a>"]],
"serde_json":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"struct\" href=\"serde_json/struct.Error.html\" title=\"struct serde_json::Error\">Error</a>"]],
"syn":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"struct\" href=\"syn/parse/struct.Error.html\" title=\"struct syn::parse::Error\">Error</a>"]],
"time":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"struct\" href=\"time/error/struct.ComponentRange.html\" title=\"struct time::error::ComponentRange\">ComponentRange</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"struct\" href=\"time/error/struct.ConversionRange.html\" title=\"struct time::error::ConversionRange\">ConversionRange</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"struct\" href=\"time/error/struct.DifferentVariant.html\" title=\"struct time::error::DifferentVariant\">DifferentVariant</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"enum\" href=\"time/error/enum.Format.html\" title=\"enum time::error::Format\">Format</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"enum\" href=\"time/error/enum.InvalidFormatDescription.html\" title=\"enum time::error::InvalidFormatDescription\">InvalidFormatDescription</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"struct\" href=\"time/error/struct.InvalidVariant.html\" title=\"struct time::error::InvalidVariant\">InvalidVariant</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"enum\" href=\"time/error/enum.Parse.html\" title=\"enum time::error::Parse\">Parse</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"enum\" href=\"time/error/enum.ParseFromDescription.html\" title=\"enum time::error::ParseFromDescription\">ParseFromDescription</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"enum\" href=\"time/error/enum.TryFromParsed.html\" title=\"enum time::error::TryFromParsed\">TryFromParsed</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"enum\" href=\"time/error/enum.Error.html\" title=\"enum time::error::Error\">Error</a>"]],
"uuid":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"struct\" href=\"uuid/struct.Error.html\" title=\"struct uuid::Error\">Error</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()